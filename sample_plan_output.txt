# Sample Terraform Plan Output for Spacelift Private Workers

Terraform used the selected providers to generate the following execution plan. 
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_autoscaling_group.spacelift_worker will be created
  + resource "aws_autoscaling_group" "spacelift_worker" {
      + arn                       = (known after apply)
      + availability_zones        = (known after apply)
      + default_cooldown          = (known after apply)
      + desired_capacity          = 2
      + force_delete              = false
      + force_delete_warm_pool    = false
      + health_check_grace_period = 300
      + health_check_type         = "EC2"
      + id                        = (known after apply)
      + load_balancers            = (known after apply)
      + max_size                  = 4
      + min_size                  = 2
      + name                      = "spacelift-private-workers-worker-asg"
      + protect_from_scale_in     = false
      + service_linked_role_arn   = (known after apply)
      + target_group_arns         = []
      + vpc_zone_identifier       = (known after apply)

      + launch_template {
          + id      = (known after apply)
          + version = "$Latest"
        }
    }

  # aws_iam_instance_profile.spacelift_worker will be created
  + resource "aws_iam_instance_profile" "spacelift_worker" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = "spacelift-private-workers-worker-profile"
      + path        = "/"
      + role        = "spacelift-private-workers-worker-role"
      + tags_all    = (known after apply)
      + unique_id   = (known after apply)
    }

  # aws_iam_role.spacelift_worker will be created
  + resource "aws_iam_role" "spacelift_worker" {
      + arn                   = (known after apply)
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "spacelift-private-workers-worker-role"
      + path                  = "/"
      + tags                  = {
          + "Name"    = "spacelift-private-workers-worker-role"
          + "Project" = "spacelift-private-workers"
        }
      + tags_all              = {
          + "Name"    = "spacelift-private-workers-worker-role"
          + "Project" = "spacelift-private-workers"
        }
      + unique_id             = (known after apply)
    }

  # aws_iam_role_policy.spacelift_worker will be created
  + resource "aws_iam_role_policy" "spacelift_worker" {
      + id     = (known after apply)
      + name   = "spacelift-private-workers-worker-policy"
      + policy = jsonencode(
          {
            + Statement = [
                + {
                    + Action   = [
                        + "ec2:DescribeVolumes",
                        + "ec2:DescribeSnapshots",
                        + "ec2:DescribeImages",
                        + "ec2:DescribeInstances",
                      ]
                    + Effect   = "Allow"
                    + Resource = "*"
                  },
              ]
            + Version   = "2012-10-17"
          }
        )
      + role   = (known after apply)
    }

  # aws_launch_template.spacelift_worker will be created
  + resource "aws_launch_template" "spacelift_worker" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + id                     = (known after apply)
      + image_id               = (known after apply)
      + instance_type          = "t3.medium"
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "spacelift-private-workers-worker-"
      + user_data              = (known after apply)
      + vpc_security_group_ids = (known after apply)

      + iam_instance_profile {
          + name = "spacelift-private-workers-worker-profile"
        }
    }

  # aws_security_group.spacelift_worker will be created
  + resource "aws_security_group" "spacelift_worker" {
      + arn                    = (known after apply)
      + description            = "Security group for Spacelift worker instances"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = "spacelift-private-workers-worker-"
      + owner_id               = (known after apply)
      + tags                   = {
          + "Name"    = "spacelift-private-workers-worker-sg"
          + "Project" = "spacelift-private-workers"
        }
      + tags_all               = {
          + "Name"    = "spacelift-private-workers-worker-sg"
          + "Project" = "spacelift-private-workers"
        }
      + vpc_id                 = (known after apply)
    }

  # spacelift_worker_pool.main will be created
  + resource "spacelift_worker_pool" "main" {
      + config      = (known after apply)
      + description = "Private worker pool running on EC2 instances"
      + id          = (known after apply)
      + name        = "private-ec2-workers"
      + private_key = (sensitive value)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + autoscaling_group_name   = "spacelift-private-workers-worker-asg"
  + iam_role_arn             = (known after apply)
  + launch_template_id       = (known after apply)
  + security_group_id        = (known after apply)
  + worker_instances_info    = "Use 'aws ec2 describe-instances --filters Name=tag:Type,Values=spacelift-worker' to see worker instances"
  + worker_pool_config       = (sensitive value)
  + worker_pool_id           = (known after apply)
  + worker_pool_name         = "private-ec2-workers"
  + worker_pool_private_key  = (sensitive value)
